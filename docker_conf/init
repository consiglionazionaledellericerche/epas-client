#!/bin/bash
set -e

if [ -z "${STAMPINGS_SERVER_PROTOCOL}" ] && [ -z "${STAMPINGS_ON_LOCAL_FOLDER}" ]; then
    echo "ERROR: "
    echo "Per favore specifica la modalit√† di accesso alle timbrature tramite il parametro STAMPINGS_SERVER_PROTOCOL"
    exit 1
else if [ -n "${STAMPINGS_SERVER_PROTOCOL}" ] && [ "${STAMPINGS_SERVER_PROTOCOL}" != "local" ] \
	&& [ "${STAMPINGS_SERVER_PROTOCOL}" != "ftp" ] && [ "${STAMPINGS_SERVER_PROTOCOL}" != "sftp" ] \
	&& [ "${STAMPINGS_SERVER_PROTOCOL}" != "smartclock" ] && [ "${STAMPINGS_SERVER_PROTOCOL}" != "smartclock-http" ]; then  
    echo "ERROR: "
    echo "I protocolli supportati per prelevare le timbrature al momento sono: local, ftp, sftp, smartclock."
    echo "Specifica un protocollo supportato tramite il parametro STAMPINGS_SERVER_PROTOCOL"
    exit 1  
  fi
fi
 
if [ "${STAMPINGS_ON_LOCAL_FOLDER}" == "True" ] || [ "${STAMPINGS_SERVER_PROTOCOL}" == "local" ]; then
      echo "Configurazione con timbrature in folder locale, ignorati parametri FTP server (FTP_*) e Badge Reader (BR_*)."
fi
      
if [ "${STAMPINGS_SERVER_PROTOCOL}" == "ftp" ] || [ "${STAMPINGS_SERVER_PROTOCOL}" == "sftp" ]; then
    if [ -z "${FTP_SERVER_NAME}" ] || [ -z "${FTP_USERNAME}" ]  || [ -z "${FTP_PASSWORD}" ]; then
      echo "ERROR: "
      echo "Per favore specifica i parametri per la connessione al server FTP/SFTP FTP_SERVER_NAME, FTP_USER, FTP_PASSWORD"
      exit 1
    fi
fi

if [ "${STAMPINGS_SERVER_PROTOCOL}" == "smartclock" ] || [ "${STAMPINGS_SERVER_PROTOCOL}" == "smartclock-http" ]; then
	if [ -z "${BR_IP_ADDRESS}" ] || [ -z "${BR_USER}" ]  || [ -z "${BR_PASSWORD}" ]; then
    echo "ERROR: "
    echo "Per favore specifica i parametri per la connessione al lettore Badge: BR_IP_ADDRESS, BR_USER, BR_PASSWORD"
    exit 1
	fi
fi

if [ -z "${SERVER_HOST}" ] || [ -z "${EPAS_CLIENT_USER}" ] || [ -z "${EPAS_CLIENT_PASSWORD}" ]; then
    echo "ERROR: "
    echo "Per favore specifica i parametri per l'invio delle timbrature ad ePAS: SERVER_HOST, EPAS_CLIENT_USER, EPAS_CLIENT_PASSWORD"
    exit 1
fi

if [ "${METRICS_ENABLED}" == "True" ] && [ -z "${METRICS_PUSHGATEWAY_URL}" ]; then
    echo "ERROR: "
    echo "Per favore specifica l'url del pushgateway a cui inviare le metriche tramite il parametro METRICS_PUSHGATEWAY_URL"
    exit 1

fi
STAMPINGS_SERVER_PROTOCOL=${STAMPINGS_SERVER_PROTOCOL:-smartclock}
STAMPINGS_ON_LOCAL_FOLDER=${STAMPINGS_ON_LOCAL_FOLDER:-False}

LOG_LEVEL=${LOG_LEVEL:-INFO}

FTP_SERVER_NAME=${FTP_SERVER_NAME}
FTP_SERVER_PORT=${FTP_SERVER_PORT:-21}
FTP_USERNAME=${FTP_USERNAME}
FTP_PASSWORD=${FTP_PASSWORD}
FTP_FILE_PREFIX=${FTP_FILE_PREFIX:-20}
FTP_FILE_SUFFIX=${FTP_FILE_SUFFIX}
FTP_SERVER_DIR=${FTP_SERVER_DIR:-.}

BR_IP=${BR_IP_ADDRESS}
BR_PORT=${BR_PORT:-21}
BR_USER=${BR_USER}
BR_PSW=${BR_PASSWORD}

OFFSET_ANNO_BADGE=${OFFSET_ANNO_BADGE:-2000}

printf -v DEFAULT_REGEX "%q" "^(?P<operazione>[0,E,U,T])(?P<tipo>\w{1})(?P<giornoSettimana>\d{1})(?P<matricolaFirma>\d{9})(?P<causale>\d{4})(?P<ora>\d{2})(?P<minuti>\d{2})(?P<secondi>\d{2})(?P<giorno>\d{2})(?P<mese>\d{2})(?P<anno>\d{2})(?P<lettore>\d{2})$"
REGEX_STAMPING=${REGEX_STAMPING:-$DEFAULT_REGEX}

printf -v DEFAULT_MAPPING_CAUSALI_CLIENT_SERVER "%q" "{'0000': None, '0001': 'motiviDiServizio', '0007': 'pausaPranzo', '0008': 'permessoBreve'}"
MAPPING_CAUSALI_CLIENT_SERVER=${MAPPING_CAUSALI_CLIENT_SERVER:-$DEFAULT_MAPPING_CAUSALI_CLIENT_SERVER}

printf -v DEFAULT_MAPPING_OPERAZIONE_CLIENT_SERVER "%q" "{'E':'0','U':'1'}"
MAPPING_OPERAZIONE_CLIENT_SERVER=${MAPPING_OPERAZIONE_CLIENT_SERVER:-$DEFAULT_MAPPING_OPERAZIONE_CLIENT_SERVER}

SERVER_HOST=${SERVER_HOST}
SERVER_PORT=${SERVER_PORT:-443}
SERVER_PROTOCOL=${SERVER_PROTOCOL:-https}
EPAS_CLIENT_USER=${EPAS_CLIENT_USER}
EPAS_CLIENT_PASSWORD=${EPAS_CLIENT_PASSWORD}

CRON_RANDOM_SLEEP=${CRON_RANDOM_SLEEP:-180}
CRON=${CRON:-*/15 6-23 * * *}
PROBLEMS_CRON=${PROBLEMS_CRON:-0 1 * * *}
MAX_THREADS=${MAX_THREADS:-1}
DAYS_TO_DOWNLOAD=${DAYS_TO_DOWNLOAD:-10}
MAX_BAD_STAMPING_DAYS=${MAX_BAD_STAMPING_DAYS:-10}
SERVER_ERROR_CODES=${SERVER_ERROR_CODES:-401, 404, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509}

METRICS_ENABLED=${METRICS_ENABLED:-False}
METRICS_PUSHGATEWAY_URL=${METRICS_PUSHGATEWAY_URL}
METRICS_PUSHGATEWAY_USER=${METRICS_PUSHGATEWAY_USER}
METRICS_PUSHGATEWAY_PASSWORD=${METRICS_PUSHGATEWAY_PASSWORD}

cp /client/docker_conf/config.py /client/epas_client/

sed -i 's#{{MAX_THREADS}}#'"${MAX_THREADS}"'#' /client/epas_client/config.py
sed -i 's#{{SERVER_ERROR_CODES}}#'"${SERVER_ERROR_CODES}"'#' /client/epas_client/config.py
sed -i 's#{{MAX_BAD_STAMPING_DAYS}}#'"${MAX_BAD_STAMPING_DAYS}"'#' /client/epas_client/config.py
sed -i 's#{{LOG_LEVEL}}#'"${LOG_LEVEL}"'#' /client/epas_client/config.py

sed -i 's#{{OFFSET_ANNO_BADGE}}#'"${OFFSET_ANNO_BADGE}"'#' /client/epas_client/config.py
sed -i 's#{{SERVER_HOST}}#'"${SERVER_HOST}"'#' /client/epas_client/config.py
sed -i 's#{{SERVER_PORT}}#'"${SERVER_PORT}"'#' /client/epas_client/config.py
sed -i 's#{{SERVER_PROTOCOL}}#'"${SERVER_PROTOCOL}"'#' /client/epas_client/config.py
sed -i 's#{{EPAS_CLIENT_USER}}#'"${EPAS_CLIENT_USER}"'#' /client/epas_client/config.py
sed -i 's#{{EPAS_CLIENT_PASSWORD}}#'"${EPAS_CLIENT_PASSWORD}"'#' /client/epas_client/config.py

sed -i 's#{{REGEX_STAMPING}}#'"${REGEX_STAMPING}"'#' /client/epas_client/config.py
sed -i 's#{{MAPPING_OPERAZIONE_CLIENT_SERVER}}#'"${MAPPING_OPERAZIONE_CLIENT_SERVER}"'#' /client/epas_client/config.py
sed -i 's#{{MAPPING_CAUSALI_CLIENT_SERVER}}#'"${MAPPING_CAUSALI_CLIENT_SERVER}"'#' /client/epas_client/config.py
sed -i 's#{{DAYS_TO_DOWNLOAD}}#'"${DAYS_TO_DOWNLOAD}"'#' /client/epas_client/config.py

sed -i 's#{{STAMPINGS_SERVER_PROTOCOL}}#'"${STAMPINGS_SERVER_PROTOCOL}"'#' /client/epas_client/config.py
sed -i 's#{{STAMPINGS_ON_LOCAL_FOLDER}}#'"${STAMPINGS_ON_LOCAL_FOLDER}"'#' /client/epas_client/config.py

sed -i 's#{{FTP_SERVER_NAME}}#'"${FTP_SERVER_NAME}"'#' /client/epas_client/config.py
sed -i 's#{{FTP_SERVER_PORT}}#'"${FTP_SERVER_PORT}"'#' /client/epas_client/config.py
sed -i 's#{{FTP_USERNAME}}#'"${FTP_USERNAME}"'#' /client/epas_client/config.py
sed -i 's#{{FTP_PASSWORD}}#'"${FTP_PASSWORD}"'#' /client/epas_client/config.py
sed -i 's#{{FTP_FILE_PREFIX}}#'"${FTP_FILE_PREFIX}"'#' /client/epas_client/config.py
sed -i 's#{{FTP_FILE_SUFFIX}}#'"${FTP_FILE_SUFFIX}"'#' /client/epas_client/config.py
sed -i 's#{{FTP_SERVER_DIR}}#'"${FTP_SERVER_DIR}"'#' /client/epas_client/config.py

sed -i 's#{{BR_IP}}#'"${BR_IP}"'#' /client/epas_client/config.py
sed -i 's#{{BR_PORT}}#'"${BR_PORT}"'#' /client/epas_client/config.py
sed -i 's#{{BR_USER}}#'"${BR_USER}"'#' /client/epas_client/config.py
sed -i 's#{{BR_PSW}}#'"${BR_PSW}"'#' /client/epas_client/config.py

sed -i 's#{{METRICS_ENABLED}}#'"${METRICS_ENABLED}"'#' /client/epas_client/config.py
sed -i 's#{{METRICS_PUSHGATEWAY_URL}}#'"${METRICS_PUSHGATEWAY_URL}"'#' /client/epas_client/config.py
sed -i 's#{{METRICS_PUSHGATEWAY_USER}}#'"${METRICS_PUSHGATEWAY_USER}"'#' /client/epas_client/config.py
sed -i 's#{{METRICS_PUSHGATEWAY_PASSWORD}}#'"${METRICS_PUSHGATEWAY_PASSWORD}"'#' /client/epas_client/config.py

cp /client/docker_conf/executeClient.sh /client/
chmod +x /client/executeClient.sh

cp /client/docker_conf/cleanLogs.sh /client/
chmod +x /client/cleanLogs.sh

cp /client/docker_conf/badStampings.sh /client/
chmod +x /client/badStampings.sh

cp /client/docker_conf/cron /tmp

sed -i 's#{{CRON}}#'"${CRON}"'#' /tmp/cron
sed -i 's#{{PROBLEMS_CRON}}#'"${PROBLEMS_CRON}"'#' /tmp/cron
sed -i 's#{{CRON_RANDOM_SLEEP}}#'"${CRON_RANDOM_SLEEP}"'#' /tmp/cron

crontab /tmp/cron
crond -f

exit 0